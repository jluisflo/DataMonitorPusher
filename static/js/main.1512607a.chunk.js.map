{"version":3,"sources":["models/transaction.model.ts","App.tsx","index.tsx"],"names":["Transaction","id","amount","country","partner","date","this","App","useState","channel","setConnection","transactions","setTransactions","updates","setUpdates","useEffect","Pusher","cluster","subscribe","bind","data","message","Id","Amount","Country","Partner","Date","span","style","textAlign","length","map","transaction","marginTop","borderLeft","ReactDOM","render","StrictMode","offset","document","getElementById"],"mappings":"wPAAaA,EACX,WACEC,EACAC,EACAC,EACAC,EACAC,GACC,yBAOHJ,QAPE,OAQFC,YARE,OASFC,aATE,OAUFC,aAVE,OAWFC,UAXE,EACAC,KAAKL,GAAKA,EACVK,KAAKJ,OAASA,EACdI,KAAKH,QAAUA,EACfG,KAAKF,QAAUA,EACfE,KAAKD,KAAOA,G,OCoEDE,EA1EI,WACjB,MAAiCC,mBAAyB,MAA1D,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwCF,mBAAwB,IAAhE,mBAAOG,EAAP,KAAqBC,EAArB,KACA,EAA8BJ,mBAAiB,GAA/C,mBAAOK,EAAP,KAAgBC,EAAhB,KA2BA,OAzBAC,qBAAU,WACR,IAGMN,EAHS,IAAIO,IAAO,uBAAwB,CAChDC,QAAS,QAEYC,UAAU,gBACjCR,EAAcD,KACb,IAEHM,qBAAU,WACJN,GACFA,EAAQU,KAAK,OAAO,SAACC,GACnB,IAAMC,EAAYD,EAAZC,QACNT,GAAgB,SAAAD,GAAY,4BAAQA,GAAR,CAAsB,IAAIX,EAAYqB,EAAQC,GAAID,EAAQE,OAAQF,EAAQG,QAASH,EAAQI,QAASJ,EAAQK,gBAG3I,CAACjB,IAEJM,qBAAU,WACJN,GACFA,EAAQU,KAAK,UAAU,SAACC,GACtBN,GAAW,SAAAD,GAAO,OAAIA,EAAU,UAGnC,CAACJ,IAGF,qCACE,iCACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKkB,KAAM,GAAX,SACE,+CAEF,cAAC,IAAD,CAAKA,KAAM,EAAGC,MAAO,CAAEC,UAAW,SAAlC,SACE,4DAA8B,iCAASlB,EAAamB,cAEtD,cAAC,IAAD,CAAKH,KAAM,EAAGC,MAAO,CAAEC,UAAW,SAAlC,SACE,wDAA0B,iCAAShB,gBAK1CF,EAAaoB,KAAI,SAACC,GAAD,OAChB,cAAC,IAAD,CAAMJ,MAAO,CAAEK,UAAW,GAAIC,WAAY,qBAA1C,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAKP,KAAM,EAAX,SACE,+BAAI,qDAAJ,IAAsCK,EAAY/B,QAEpD,eAAC,IAAD,CAAK0B,KAAM,GAAX,UACE,+BACE,+CADF,IAC8BK,EAAY5B,WAE1C,+BACE,+CADF,IAC8B4B,EAAY7B,WAE1C,+BACE,4CADF,IAC2B6B,EAAY3B,WAGzC,cAAC,IAAD,CAAKsB,KAAM,EAAX,SACE,0CAAaK,EAAY9B,wB,cChEvCiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAKV,KAAM,GAAIW,OAAQ,EAAvB,SACE,cAAC,EAAD,UAKNC,SAASC,eAAe,W","file":"static/js/main.1512607a.chunk.js","sourcesContent":["export class Transaction {\r\n  constructor(\r\n    id: string,\r\n    amount: number,\r\n    country: string,\r\n    partner: string,\r\n    date: string\r\n  ) {\r\n    this.id = id;\r\n    this.amount = amount;\r\n    this.country = country;\r\n    this.partner = partner;\r\n    this.date = date;\r\n  }\r\n  id!: string;\r\n  amount!: number;\r\n  country!: string;\r\n  partner!: string;\r\n  date!: string;\r\n}\r\n","\nimport { Card, Col, Row, Tag } from 'antd';\nimport Pusher, { Channel } from 'pusher-js';\nimport { useEffect, useState } from \"react\";\nimport { Transaction } from './models/transaction.model';\n\nexport const App = () => {\n  const [channel, setConnection] = useState<null | Channel>(null);\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [updates, setUpdates] = useState<number>(0);\n\n  useEffect(() => {\n    const pusher = new Pusher('9814904cb7007dd3a920', {\n      cluster: 'us2',\n    });\n    const channel = pusher.subscribe('transactions');\n    setConnection(channel)\n  }, []);\n\n  useEffect(() => {\n    if (channel) {\n      channel.bind('new', (data: any) => {\n        let { message } = data;\n        setTransactions(transactions => [...transactions, new Transaction(message.Id, message.Amount, message.Country, message.Partner, message.Date)])\n      });\n    }\n  }, [channel]);\n\n  useEffect(() => {\n    if (channel) {\n      channel.bind('update', (data: any) => {\n        setUpdates(updates => updates + 1)\n      });\n    }\n  }, [channel]);\n\n  return (\n    <>\n      <header>\n        <Card>\n          <Row>\n            <Col span={12}>\n              <h1>Pusher Demo</h1>\n            </Col>\n            <Col span={6} style={{ textAlign: 'right' }}>\n              <h1>Transactions in progress: <strong>{transactions.length}</strong></h1>\n            </Col>\n            <Col span={6} style={{ textAlign: 'right' }}>\n              <h1>Transactions updates: <strong>{updates}</strong></h1>\n            </Col>\n          </Row>\n        </Card>\n      </header>\n      {transactions.map((transaction) =>\n        <Card style={{ marginTop: 10, borderLeft: '5px solid #90caf9' }}>\n          <Row>\n            <Col span={6}>\n              <h3><strong>Transaction ID:</strong> {transaction.id}</h3>\n            </Col>\n            <Col span={12}>\n              <h3>\n                <strong>Partner: </strong> {transaction.partner}\n              </h3>\n              <h3>\n                <strong>Country: </strong> {transaction.country}\n              </h3>\n              <h3>\n                <strong>Date: </strong> {transaction.date}\n              </h3>\n            </Col>\n            <Col span={6}>\n              <h3>Amount: {transaction.amount}</h3>\n            </Col>\n          </Row>\n        </Card>\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Col, Row } from 'antd';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Row>\n      <Col span={20} offset={2}>\n        <App />\n      </Col>\n    </Row>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}